services:
  db:
    image: postgres:16-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-scriptwf}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-L4r01EC4DAXA7UwG}
      POSTGRES_DB: ${POSTGRES_DB:-scriptwf}
    ports:
      - "5432:5432"
    volumes:
      - pgdata_prod:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 6

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
      target: development
      args:
        BUILDKIT_INLINE_CACHE: 1
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3000
      DATABASE_URL: postgresql://${POSTGRES_USER:-scriptwf}:${POSTGRES_PASSWORD:-L4r01EC4DAXA7UwG}@db:5432/${POSTGRES_DB:-scriptwf}
      JWT_SECRET: ${JWT_SECRET}
    depends_on:
      db:
        condition: service_healthy
    expose:
      - "3000"

  frontend:
    build:
      context: .
      dockerfile: docker/frontend.Dockerfile
    restart: unless-stopped
    depends_on:
      - backend
    ports:
      - "80:80"

volumes:
  pgdata_prod: